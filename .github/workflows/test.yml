name: Test
on:
  workflow_run:
    workflows: [ "Duster Fix" ]
    types:
      - completed
  pull_request:
    branches: [ main, dev ]
  push:
    branches: [ main, dev ]
jobs:
  tests:
    name: Run Tests
    runs-on: ubuntu-latest
    if: ${{ github.ref != 'refs/heads/main' }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Cache Composer dependencies
        id: cache-composer
        uses: actions/cache@v3
        with:
          path: |
            ~/.composer/cache/files
            vendor
          key: composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            composer-

      - name: Cache Yarn dependencies
        id: cache-yarn
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-

      # - name: Setup SSH Keys and known_hosts
      #   env:
      #       SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      #   run: |
      #       ssh-agent -a $SSH_AUTH_SOCK > /dev/null
      #       ssh-add - <<< "${{ secrets.SSH_PRIVATE_KEY }}"

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, mysql
      #          coverage: none

      - name: Copy environment config file
        run: php -r "file_exists('.env') || copy('.env.testing', '.env');"

      - name: Install Composer Dependencies
        run: |
          composer config "http-basic.nova.laravel.com" "${{ secrets.NOVA_USERNAME }}" "${{ secrets.NOVA_LICENSE_KEY }}"
#          composer config "http-basic.spark.laravel.com" "${{ secrets.SPARK_USERNAME }}" "${{ secrets.SPARK_API_TOKEN }}"
          composer config "github-oauth.github.com" "${{ secrets.GH_ACTIONS_TOKEN }}"
          composer config "http-basic.satis.spatie.be" "${{ secrets.MAILCOACH_EMAIL }}" "${{ secrets.MAILCOACH_KEY }}"
          composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Register Font-Awesome Key
        run: |
          npm config set "@fortawesome:registry" https://npm.fontawesome.com/
          npm config set "//npm.fontawesome.com/:_authToken" ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}

      - name: Validate Composer
        run: composer validate

      - name: Setup Laravel Application
        run: |
          php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Create SQLite database
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
          SF_CONSUMER_KEY: "${{ secrets.SF_CONSUMER_KEY }}"
          SF_CONSUMER_SECRET: "${{ secrets.SF_CONSUMER_SECRET }}"
          SF_USERNAME: "${{ secrets.SF_USERNAME }}"
          SF_PASSWORD: "${{ secrets.SF_PASSWORD }}"
        run: vendor/bin/phpunit

      #      - name: Run migrations
      #        env:
      #          DB_CONNECTION: sqlite
      #          DB_DATABASE: database/database.sqlite
      #        run: php artisan migrate
      #      - name: Install Composer dependencies
      #        run: |
      #          composer config "http-basic.nova.laravel.com" "${{ secrets.NOVA_USERNAME }}" "${{ secrets.NOVA_LICENSE_KEY }}"
      #          composer config "http-basic.spark.laravel.com" "${{ secrets.SPARK_USERNAME }}" "${{ secrets.SPARK_API_TOKEN }}"
      #          composer config "github-oauth.github.com" "${{ secrets.GH_ACTIONS_TOKEN }}"
      #          composer config "http-basic.satis.spatie.be" "${{ secrets.MAILCOACH_EMAIL }}" "${{ secrets.MAILCOACH_KEY }}"
      #          composer install --prefer-dist --no-interaction
      #      - name: Run yarn
      #        run: |
      #          yarn --version
      #          yarn && yarn dev
      #      - name: Run Tests
      #        run: |
      #          ./vendor/bin/pest --version
      #          ./vendor/bin/pest --verbose
      #        env:
      #          APP_ENV: testing

