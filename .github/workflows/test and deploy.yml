name: Test and Deploy
on:
  pull_request:
    branches: [ main, dev ]
  push:
    branches: [ main, dev ]
jobs:
  tests:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Checkout private repo
        uses: actions/checkout@v3
        with:
          repository: omnia-digital/library
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: main
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.composer/cache/files
            node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
      # - name: Setup SSH Keys and known_hosts
      #   env:
      #       SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      #   run: |
      #       ssh-agent -a $SSH_AUTH_SOCK > /dev/null
      #       ssh-add - <<< "${{ secrets.SSH_PRIVATE_KEY }}"
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, mysql
      - name: Copy environment config file
        run: php -r "file_exists('.env') || copy('.env.testing', '.env');"
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Register Font-Awesome Key
        run: |
          npm config set "@fortawesome:registry" https://npm.fontawesome.com/
          npm config set "//npm.fontawesome.com/:_authToken" ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}
      - name: Validate Composer
        run: composer validate
      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Create SQLite database
        run: |
          mkdir -p database
          touch database/database.sqlite
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
          SF_CONSUMER_KEY:  "${{ secrets.SF_CONSUMER_KEY }}"
          SF_CONSUMER_SECRET: "${{ secrets.SF_CONSUMER_SECRET }}"
          SF_USERNAME: "${{ secrets.SF_USERNAME }}"
          SF_PASSWORD: "${{ secrets.SF_PASSWORD }}"
        run: php artisan test
#      - name: Run migrations
#        env:
#          DB_CONNECTION: sqlite
#          DB_DATABASE: database/database.sqlite
#        run: php artisan migrate
#      - name: Install Composer dependencies
#        run: |
#          composer config "http-basic.nova.laravel.com" "${{ secrets.NOVA_USERNAME }}" "${{ secrets.NOVA_LICENSE_KEY }}"
#          composer config "http-basic.spark.laravel.com" "${{ secrets.SPARK_USERNAME }}" "${{ secrets.SPARK_API_TOKEN }}"
#          composer config "github-oauth.github.com" "${{ secrets.GH_ACTIONS_TOKEN }}"
#          composer install --prefer-dist --no-interaction
#      - name: Run yarn
#        run: |
#          yarn --version
#          yarn && yarn dev
      #      - name: Run Tests
      #        run: |
      #          ./vendor/bin/pest --version
      #          ./vendor/bin/pest --verbose
      #        env:
      #          APP_ENV: testing
  deploy:
    name: Deploy to Vapor
    runs-on: ubuntu-latest
    if: github.ref == 'false'
#    if: ${{ github.event.pull_request.merged && github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/main' }}
    needs: tests
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          tools: composer:v2
          coverage: none
      - name: Register Font-Awesome Key
        run: |
          npm config set "@fortawesome:registry" https://npm.fontawesome.com/
          npm config set "//npm.fontawesome.com/:_authToken" ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}
      - name: Validate Composer
        run: composer validate
      - name: Install Composer dependencies
        run: |
          composer config "http-basic.nova.laravel.com" "${{ secrets.NOVA_USERNAME }}" "${{ secrets.NOVA_LICENSE_KEY }}"
          composer config "http-basic.spark.laravel.com" "${{ secrets.SPARK_USERNAME }}" "${{ secrets.SPARK_API_TOKEN }}"
          composer config "github-oauth.github.com" "${{ secrets.GH_ACTIONS_TOKEN }}"
          composer install --prefer-dist --no-interaction --no-suggest
      - name: Require Vapor CLI
        run: composer global require laravel/vapor-cli
      - name: Deploy Environment
        env:
          VAPOR_ENV: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
          VAPOR_API_TOKEN: ${{ secrets.VAPOR_API_TOKEN }}
        run: vapor deploy ${{ env.VAPOR_ENV }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: Logs
          path: ./storage/logs
      - name: Sentry Release
        uses: getsentry/action-release@v1
        if: github.ref == 'refs/heads/main'
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment:
            production

